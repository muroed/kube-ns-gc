# Пример использования Kubernetes Secret для хранения Telegram токенов
# Создайте этот Secret перед установкой Helm чарта

apiVersion: v1
kind: Secret
metadata:
  name: kube-ns-gc-telegram
  namespace: kube-ns-gc
type: Opaque
stringData:
  bot-token: "1234567890:ABCdefGHIjklMNOpqrsTUVwxyz"  # Замените на ваш токен
  chat-id: "123456789"  # Замените на ваш Chat ID

---
# Обновленный ConfigMap с использованием переменных окружения
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-ns-gc-config
  namespace: kube-ns-gc
data:
  config.json: |
    {
      "cleanup_interval": "24h",
      "namespace_max_age": "168h",
      "helm_release_timeout": "5m",
      "excluded_namespaces": ["kube-system", "kube-public", "kube-node-lease", "default", "kube-ns-gc"],
      "ignore_label": "kube-ns-gc.ignore",
      "log_level": "info",
      "port": 8080,
      "telegram": {
        "enabled": true,
        "bot_token": "${TELEGRAM_BOT_TOKEN}",
        "chat_id": "${TELEGRAM_CHAT_ID}",
        "parse_mode": "Markdown"
      }
    }

---
# Обновленный Deployment с переменными окружения
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-ns-gc
  namespace: kube-ns-gc
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-ns-gc
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-ns-gc
    spec:
      serviceAccountName: kube-ns-gc
      containers:
      - name: kube-ns-gc
        image: kube-ns-gc:latest
        ports:
        - containerPort: 8080
          name: http
        env:
        # Переменные для Telegram
        - name: TELEGRAM_BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: kube-ns-gc-telegram
              key: bot-token
        - name: TELEGRAM_CHAT_ID
          valueFrom:
            secretKeyRef:
              name: kube-ns-gc-telegram
              key: chat-id
        # Другие переменные окружения
        - name: TELEGRAM_ENABLED
          value: "true"
        - name: TELEGRAM_PARSE_MODE
          value: "Markdown"
        - name: CLEANUP_INTERVAL
          value: "24h"
        - name: NAMESPACE_MAX_AGE
          value: "168h"
        - name: HELM_RELEASE_TIMEOUT
          value: "5m"
        - name: LOG_LEVEL
          value: "info"
        - name: PORT
          value: "8080"
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
      volumes:
      - name: config
        configMap:
          name: kube-ns-gc-config
